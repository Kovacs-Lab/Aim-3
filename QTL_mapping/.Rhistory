install.packages('qtl') #Main package, for analysis
install.packages('qtlcharts') #accessory, for displaying graphs
install.packages('LinkageMapView') #accessory, for displaying linkage maps
install.packages('rcompanion')# for plotNormalHistogram
library(qtl) #load packages
library(qtlcharts)
library(LinkageMapView)
library(rcompanion)
#Collecting enviroment variables
print("Make sure to input names
AS THEY APPEAR on the csv!!") #Just a user warning
fileName <- readline("Enter file name: ") #Mapping table file
readline("Second Genotype: ")) #For example "nn", "np"
alleleName <- c(readline("First Allele: "),
readline("Second Allele: ")) #For example "n","p" TODO, Autopull from genotype
fileName <- readline("Enter file name: ") #Mapping table file
genotypeName <- c(readline("First Genotype: "),
readline("Second Genotype: ")) #For example "nn", "np"
alleleName <- c(readline("First Allele: "),
readline("Second Allele: ")) #For example "n","p" TODO, Autopull from genotype
naNames <- c(readline("First NA String: "),
readline("Second NA String: ")) #For example "NA", "--"
colNum <- readline("Column Number: ") #Column for pheno of interest
colNum <- as.numeric(colNum) #convert to number
colNam <- readline("Column Name: ") #name of pheno of interest
#Map generation
Map <- read.cross(format = 'csv',file = fileName
,genotypes = genotypeName,
alleles = alleleName,na.strings = naNames) #generate linkage map
Map <- jittermap(Map) #make sure no markers are in the same location
Map <- calc.genoprob(Map,step = 1,map.function = "kosambi") #associate markers with full genotypes
plot.map(Map) #draw linkage map
plotNormalHistogram(Map$pheno[,colNam]) #normal histogram of pheno of interest
#Compute statistically significant values
TraitCIM1000 <- cim(Map,pheno.col = colNum,method = "hk",
map.function = "kosambi",n.perm = 1000) # Function will take a moment to run, determines LOD value
plot(TraitCIM1000,col = 'green') #show distribution of lod scores
LOD5 <- summary(TraitCIM1000)[1]
TraitCIM<-cim(Map,pheno.col = colNum,method = "hk",
map.function = "kosambi") #Generate LOD Values
TraitCIM<-cim(Map,pheno.col = colNum,method = "hk",
map.function = "kosambi") #Generate LOD Values
abline(h = LOD5,col = "blue") #overlay statistically significant line
plot(TraitCIM1000,col = 'green') #show distribution of lod scores
LOD5 <- summary(TraitCIM1000)[1]
TraitCIM<-cim(Map,pheno.col = colNum,method = "hk",
map.function = "kosambi") #Generate LOD Values
abline(h = LOD5,col = "blue") #overlay statistically significant line
summary(TraitCIM)
#Chromosomal Analysis
cont = 'Y' #Run loop on first run through
chr <- as.numeric(readline("Chromosome? ")) #collect chromosome to look at
install.packages('qtl') #Main package, for analysis
install.packages('qtlcharts') #accessory, for displaying graphs
install.packages('LinkageMapView') #accessory, for displaying linkage maps
install.packages('rcompanion')# for plotNormalHistogram
library(qtl) #load packages
library(qtlcharts)
library(LinkageMapView)
library(rcompanion)
#Collecting enviroment variables
print("Make se to input names
AS THEY APPEAR on the csv!!") #Just a user warning
fileName <- readline("Enter file name: ") #Mapping table file
genotypeName <- c(readline("First Genotype: "),
readline("Second Genotype: ")) #For example "nn", "np"
alleleName <- c(readline("First Allele: "),
readline("Second Allele: ")) #For example "n","p" TODO, Autopull from genotype
naNames <- c(readline("First NA String: "),
readline("Second NA String: ")) #For example "NA", "--"
colNum <- readline("Column Number: ") #Column for pheno of interest
colNum <- as.numeric(colNum) #convert to number
colNam <- readline("Column Name: ") #name of pheno of interest
#Map generation
Map <- read.cross(format = 'csv',file = fileName
,genotypes = genotypeName,
alleles = alleleName,na.strings = naNames) #generate linkage map
Map <- jittermap(Map) #make sure no markers are in the same location
Map <- calc.genoprob(Map,step = 1,map.function = "kosambi") #associate markers with full genotypes
plot.map(Map) #draw linkage map
plotNormalHistogram(Map$pheno[,colNam]) #normal histogram of pheno of interest
#Compute statistically significant values
TraitCIM1000 <- cim(Map,pheno.col = colNum,method = "hk",
map.function = "kosambi",n.perm = 1000) # Function will take a moment to run, determines LOD value
plot(TraitCIM1000,col = 'green') #show distribution of lod scores
LOD5 <- summary(TraitCIM1000)[1]
TraitCIM<-cim(Map,pheno.col = colNum,method = "hk",
map.function = "kosambi") #Generate LOD Values
plot(TraitCIM) #show LOD graph
abline(h = LOD5,col = "blue") #overlay statistically significant line
print("If nothing shows up, the values
are below the LOD5 score") #warning for no peaks
summary(TraitCIM)
#Chromosomal Analysis
cont = 'Y' #Run loop on first run through
while(cont == 'Y'){
chr <- as.numeric(readline("Chromosome? ")) #collect chromosome to look at
plot(TraitCIM, chr = chr) #Plot chr LOD scores
abline(h = LOD5, col = "blue") #Statistically Significant
cont = readline("Would you like to investigate
another chromosome? (Y/N): ") #Y if multiple
#chromosomes are to be investigated
}
install.packages('qtl') #Main package, for analysis
install.packages('qtlcharts') #accessory, for displaying graphs
install.packages('LinkageMapView') #accessory, for displaying linkage maps
install.packages('rcompanion')# for plotNormalHistogram
library(qtl) #load packages
library(qtlcharts)
library(LinkageMapView)
library(rcompanion)
#Collecting enviroment variables
print("Make sure to input names
AS THEY APPEAR on the csv!!") #Just a user warning
fileName <- readline("Enter file name: ") #Mapping table file
genotypeName <- c(readline("First Genotype: "),
readline("Second Genotype: ")) #For example "nn", "np"
alleleName <- c(readline("First Allele: "),
readline("Second Allele: ")) #For example "n","p" TODO, Autopull from genotype
naNames <- c(readline("First NA String: "),
readline("Second NA String: ")) #For example "NA", "--"
colNum <- readline("Column Number: ") #Column for pheno of interest
colNum <- as.numeric(colNum) #convert to number
colNam <- readline("Column Name: ") #name of pheno of interest
#Map generation
Map <- read.cross(format = 'csv',file = fileName
,genotypes = genotypeName,
alleles = alleleName,na.strings = naNames) #generate linkage map
Map <- jittermap(Map) #make sure no markers are in the same location
Map <- calc.genoprob(Map,step = 1,map.function = "kosambi") #associate markers with full genotypes
plot.map(Map) #draw linkage map
plotNormalHistogram(Map$pheno[,colNam]) #normal histogram of pheno of interest
#Compute statistically significant values
TraitCIM1000 <- cim(Map,pheno.col = colNum,method = "hk",
map.function = "kosambi",n.perm = 1000) # Function will take a moment to run, determines LOD value
plot(TraitCIM1000,col = 'green') #show distribution of lod scores
LOD5 <- summary(TraitCIM1000)[1]
TraitCIM<-cim(Map,pheno.col = colNum,method = "hk",
map.function = "kosambi") #Generate LOD Values
plot(TraitCIM) #show LOD graph
abline(h = LOD5,col = "blue") #overlay statistically significant line
print("If nothing shows up, the values
are below the LOD5 score") #warning for no peaks
summary(TraitCIM)
install.packages('qtl') #Main package, for analysis
install.packages('qtlcharts') #accessory, for displaying graphs
install.packages('LinkageMapView') #accessory, for displaying linkage maps
install.packages('rcompanion')# for plotNormalHistogram
library(qtl) #load packages
library(qtlcharts)
library(LinkageMapView)
library(rcompanion)
#Collecting enviroment variables
print("Make sure to input names
AS THEY APPEAR on the csv!!") #Just a user warning
fileName <- readline("Enter file name: ") #Mapping table file
genotypeName <- c(readline("First Genotype: "),
readline("Second Genotype: ")) #For example "nn", "np"
alleleName <- c(readline("First Allele: "),
readline("Second Allele: ")) #For example "n","p" TODO, Autopull from genotype
naNames <- c(readline("First NA String: "),
readline("Second NA String: ")) #For example "NA", "--"
colNum <- readline("Column Number: ") #Column for pheno of interest
colNum <- as.numeric(colNum) #convert to number
colNam <- readline("Column Name: ") #name of pheno of interest
#Map generation
Map <- read.cross(format = 'csv',file = fileName
,genotypes = genotypeName,
alleles = alleleName,na.strings = naNames) #generate linkage map
Map <- jittermap(Map) #make sure no markers are in the same location
Map <- calc.genoprob(Map,step = 1,map.function = "kosambi") #associate markers with full genotypes
plot.map(Map) #draw linkage map
plotNormalHistogram(Map$pheno[,colNam]) #normal histogram of pheno of interest
#Compute statistically significant values
TraitCIM1000 <- cim(Map,pheno.col = colNum,method = "hk",
map.function = "kosambi",n.perm = 1000) # Function will take a moment to run, determines LOD value
plot(TraitCIM1000,col = 'green') #show distribution of lod scores
LOD5 <- summary(TraitCIM1000)[1]
TraitCIM<-cim(Map,pheno.col = colNum,method = "hk",
map.function = "kosambi") #Generate LOD Values
plot(TraitCIM) #show LOD graph
abline(h = LOD5,col = "blue") #overlay statistically significant line
print("If nothing shows up, the values
are below the LOD5 score") #warning for no peaks
summary(TraitCIM)
#Chromosomal Analysis
cont = 'Y' #Run loop on first run through
chr <- as.numeric(readline("Chromosome? ")) #collect chromosome to look at
install.packages('qtl') #Main package, for analysis
install.packages('qtlcharts') #accessory, for displaying graphs
install.packages('LinkageMapView') #accessory, for displaying linkage maps
install.packages('rcompanion')# for plotNormalHistogram
library(qtl) #load packages
library(qtlcharts)
library(LinkageMapView)
library(rcompanion)
#Collecting enviroment variables
print("Make sure to input names
AS THEY APPEAR on the csv!!") #Just a user warning
fileName <- readline("Enter file name: ") #Mapping table file
genotypeName <- c(readline("First Genotype: "),
readline("Second Genotype: ")) #For example "nn", "np"
alleleName <- c(readline("First Allele: "),
readline("Second Allele: ")) #For example "n","p" TODO, Autopull from genotype
naNames <- c(readline("First NA String: "),
readline("Second NA String: ")) #For example "NA", "--"
colNum <- readline("Column Number: ") #Column for pheno of interest
colNum <- as.numeric(colNum) #convert to number
colNam <- readline("Column Name: ") #name of pheno of interest
#Map generation
Map <- read.cross(format = 'csv',file = fileName
,genotypes = genotypeName,
alleles = alleleName,na.strings = naNames) #generate linkage map
Map <- jittermap(Map) #make sure no markers are in the same location
Map <- calc.genoprob(Map,step = 1,map.function = "kosambi") #associate markers with full genotypes
plot.map(Map) #draw linkage map
plotNormalHistogram(Map$pheno[,colNam]) #normal histogram of pheno of interest
#Compute statistically significant values
TraitCIM1000 <- cim(Map,pheno.col = colNum,method = "hk",
map.function = "kosambi",n.perm = 1000) # Function will take a moment to run, determines LOD value
plot(TraitCIM1000,col = 'green') #show distribution of lod scores
TraitCIM<-cim(Map,pheno.col = colNum,method = "hk",
map.function = "kosambi") #Generate LOD Values
plot(TraitCIM) #show LOD graph
abline(h = LOD5,col = "blue") #overlay statistically significant line
LOD5 <- summary(TraitCIM1000)[1]
TraitCIM<-cim(Map,pheno.col = colNum,method = "hk",
map.function = "kosambi") #Generate LOD Values
plot(TraitCIM) #show LOD graph
abline(h = LOD5,col = "blue") #overlay statistically significant line
print("If nothing shows up, the values
are below the LOD5 score") #warning for no peaks
#Chromosomal Analysis
cont = 'Y' #Run loop on first run through
summary(TraitCIM)
